{"version":3,"sources":["/pages/rxjs-demo/rxjs-demo.ts"],"names":[],"mappings":";;;AAAA,oBAAkB;AAClB,6CAA2C;AAC3C,6EAA2E;AAE3E,gCAAkC;AAClC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;IACpB,MAAM,CAAC,cAAc,GAAG,UAAU,GAAG,EAAE,QAAQ,EAAE,IAAI;QACjD,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;IAC/B,CAAC;AACL,CAAC;AAED,uBAAyB;AAEzB,MAAM,CAAC,MAAM,CAAC;IACV,GAAG,EAAE,MAAM;IACX,IAAI,EAAE,UAAU;IAChB,KAAK,YAAC,CAAC;IACP,CAAC;CACJ,CAAC,CAAC;AAEH,6DAA6D;AAE7D,sEAAsE;AACtE,+EAA+E;AAC/E,8CAA8C;AAE9C,+FAA+F;AAE/F,6EAA6E;AAE7E,mCAAmC;AACnC,0DAA0D;AAC1D,MAAM;AAEN,qBAAqB;AACrB,8BAA8B;AAC9B,WAAW;AAEX,mHAAmH;AAEnH,yCAAyC;AACzC,wCAAwC;AACxC,yCAAyC;AACzC,yCAAyC;AAEzC,IAAM,KAAK,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AAEvD,sBAAsB,MAAM;IACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC/B,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,MAAM,CAAC,QAAQ,EAAE,CAAC;AAClD,CAAC;AAED,IAAM,IAAI,GAAG,EAAE,CAAC,UAAU,CAAC,SAAS,CAAgB,QAAQ,EAAE,OAAO,CAAC;KACjE,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,OAAO,EAAT,CAAS,CAAC;KACnB,eAAe,CAAC,EAAE,EAAE,CAAC,CAAC;KACtB,MAAM,CAAC,YAAY,CAAC;KACpB,eAAe,CAAC,cAAM,cAAO,CAAC,GAAG,CAAC,SAAS,CAAC,EAAtB,CAAsB,CAAC,CAAC","file":"rxjs-demo.js","sourcesContent":["import 'es5-shim';\nimport 'es6-promise/dist/es6-promise.auto';\nimport 'addeventlistener-with-dispatch/src/addeventlistener-with-dispatch';\n\nimport * as avalon from 'avalon2';\nif (avalon.msie === 8) {\n    Object.defineProperty = function (obj, property, meta) {\n        obj[property] = meta.value;\n    }\n}\n\nimport * as Rx from 'rx';\n\navalon.define({\n    $id: 'demo',\n    text: 'Click Me',\n    click(e) {\n    }\n});\n\n// const button = document.getElementsByTagName('button')[0];\n\n// const source = Rx.Observable.fromEvent<MouseEvent>(button, 'click')\n//                             .map(e => (e.target as HTMLButtonElement).value)\n//                             .debounce(500);\n\n// const subscription = source.subscribeOnNext(value => console.log(`Input value: %${value}`));\n\n// const throttled = Rx.Observable.fromEvent(window, 'resize').throttle(250);\n\n// throttled.subscribeOnNext(e => {\n//     console.log(window.innerHeight, window.innerWidth);\n// });\n\n// setTimeout(() => {\n//     subscription.dispose();\n// }, 2000)\n\n// const source = Rx.Observable.interval(1000).bufferWithTime(3000).map(arr => arr.reduce((acc, x) => acc + x, 0));\n\n// const subscription = source.subscribe(\n//     x => console.log(`onNext: ${x}`),\n//     e => console.log(`onError: ${e}`),\n//     () => console.log('onCompleted'));\n\nconst codes = [38, 38, 40, 40, 37, 39, 37, 39, 66, 65];\n\nfunction isKonamiCode(buffer) {\n    console.log(buffer.toString());\n    return codes.toString() === buffer.toString();\n}\n\nconst keys = Rx.Observable.fromEvent<KeyboardEvent>(document, 'keyup')\n    .map(e => e.keyCode)\n    .bufferWithCount(10, 1)\n    .filter(isKonamiCode)\n    .subscribeOnNext(() => console.log('KONAMI!'));"]}