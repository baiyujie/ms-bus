{"version":3,"sources":["/pages/redux-demo/redux-demo.ts"],"names":[],"mappings":";;AAAA,iDAAiD;;AAEjD,aAAoC;AACpC,gCAAkC;AAElC,+BAAiC;AACjC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;AAClC,kCAA0C;AAC1C,GAAmB;AACnB,2BAAiC;AAEjC,iBAAiB,KAAS,EAAE,MAAM;IAAjB,6BAAS;IACtB,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAClB,KAAK,WAAW;YAChB,MAAM,CAAC,KAAK,CAAI;QAChB,KAAK,WAAW;YAChB,MAAM,CAAC,KAAK,CAAI;QAChB;YACA,IAAY;IAChB,CAAC;AACL,CAAC;AACD,CAGC;AACD;IACI,EAAE,CAAC,KAAK,GAAG,IAAiB;AAChC,CAAC;AACD,CAAuB;AAEvB,IAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC;IACrB,GAAG,EAAE,MAAM;IACX,KAAK,EAAE,CAAC;IACR,KAAK,EAAE,EAAO;IACd,IAAI,EAAE,KAAK;IACX,KAAK,EAAE,KAAW;QACd,cAAc,OAAO;YACjB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAQ;QAC7B,CAAC;KACJ,CAAC;IACF,GAAS;QACL,KAAK,CAAC,QAAQ,CAAC,EAAE,GAAqB;IAC1C,CAAC;IACD,EAAS;QACL,KAAK,CAAC,QAAQ,CAAC,EAAE,GAAqB;IAC1C,CAAC;IACD,EAAc;QACV,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAS;YAC7B,KAAK,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAe;QAC1C,CAAC;IACL,CAAC;IACD,EAAc;QACV,UAAU,CAAC;YACP,KAAK,CAAC,QAAQ,CAAC,EAAE,GAAqB;QAC1C,CAAC,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;CACJ,CAAC,CAAC","file":"redux-demo.js","sourcesContent":["/// <reference path=\"../../typings/index.d.ts\" />\n\nimport { createStore } from 'redux';\nimport * as avalon from 'avalon2';\n\nimport * as jQuery from 'jquery';\nglobal.$ = global.jQuery = jQuery;\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap';\nimport { createForm } from 'ane';\n\nfunction counter(state = 0, action) {\n    switch (action.type) {\n        case 'INCREMENT':\n        return state + 1\n        case 'DECREMENT':\n        return state - 1\n        default:\n        return state\n    }\n}\nconst store = createStore(\n    counter,\n    global.__REDUX_DEVTOOLS_EXTENSION__ && global.__REDUX_DEVTOOLS_EXTENSION__()\n)\nfunction render() {\n    vm.value = store.getState();\n}\nstore.subscribe(render)\n\nconst vm = avalon.define({\n    $id: 'demo',\n    value: 0,\n    title: 'hello',\n    show: false,\n    $form: createForm({\n        onFieldsChange(fields) {\n            console.log(fields);\n            console.log(this.record);\n        }\n    }),\n    increment() {\n        store.dispatch({ type: 'INCREMENT' });\n    },\n    decrement() {\n        store.dispatch({ type: 'DECREMENT' });\n    },\n    incrementIfOdd() {\n        if (store.getState() % 2 !== 0) {\n            store.dispatch({ type: 'INCREMENT' });\n        }\n    },\n    incrementAsync() {\n        setTimeout(() => {\n            store.dispatch({ type: 'INCREMENT' });\n        }, 1000);\n    }\n});"]}