{"version":3,"sources":["/services/storeService.ts"],"names":[],"mappings":"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","file":"storeService.js","sourcesContent":["import ajax from './ajaxService';\nimport { getKeyPath } from './menuService';\n\nexport const demo = {\n    key: 'region_id',\n    initialData: function () {\n        return {\n            region_enable: 0,\n            region_id: '',\n            region_name: '',\n            region_parent_id: '',\n            region_type: '',\n            suites: [{\n                name: ''\n            }]\n        };\n    },\n    fetch: function (params) {\n        return ajax({\n            url: '/api/demo',\n            type: 'get',\n            data: params\n        });\n    },\n    create: function (params) {\n        return ajax({\n            url: '/api/demo/update',\n            type: 'post',\n            data: params\n        });\n    },\n    update: function (params) {\n        return ajax({\n            url: '/api/demo/update',\n            type: 'post',\n            data: params\n        });\n    },\n    remove: function (id) {\n        return ajax({\n            url: '/api/demo/update',\n            type: 'post',\n            data: {\n                id: id\n            }\n        });\n    }\n};\n\nexport const file = {\n    insert: function (params) {\n        $.ajaxFileUpload({\n            url: '/api/file/uploadFile',\n            secureuri: false,\n            fileElementId: params.fileElementId,\n            dataType: 'json',\n            success: params.success\n        });\n    }\n};\n\nexport const github = {\n    limit: 30,\n    repository: function (params) {\n        return ajax({\n            url: \"/search/repositories\",\n            type: 'get',\n            data: params\n        });\n    },\n    processRequest: function (params) {\n        return {\n            q: params.query,\n            start: (params.page - 1) * this.limit,\n            limit: this.limit\n        };\n    },\n    processResponse: function (data) {\n        data = data.data;\n        data.rows = data.items;\n        data.total = data.total_count;\n        return data;\n    }\n};\n\nexport const menu = {\n    selectedKeys$: Observable(),\n    openKeys$: Observable()\n};\nmenu.selectedKeys$.subscribe(v => {\n    v[0] && getKeyPath(v[0]).then(result => {\n        menu.openKeys$.onNext(result.map(item => item.key));\n        breadcrumb.list$.onNext(result.reverse());\n    });\n});\n\nexport const breadcrumb = {\n    list$: Observable()\n};\n\nfunction Observable() {\n    return {\n        onNextCbList: [],\n        subscribe(onNext) {\n            this.onNextCbList.push(onNext);\n        },\n        onNext(value) {\n            this.onNextCbList.forEach(cb => {\n                if (typeof cb === 'function') {\n                    cb(value);\n                }\n            });\n        }\n    };\n}"]}