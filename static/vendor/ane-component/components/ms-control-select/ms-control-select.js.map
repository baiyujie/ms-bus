{"version":3,"sources":["/vendor/ane-component/components/ms-control-select/ms-control-select.js"],"names":[],"mappings":";;;AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,KAAK,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAC;AAC9C,IAAI,OAAO,GAAG,OAAO,CAAC,gCAAgC,CAAC,CAAC;AAExD;;;;;;;;;;;;;;;;GAgBG;AACH,MAAM,CAAC,SAAS,CAAC,kBAAkB,EAAE;IACjC,KAAK,EAAE,SAAS;IAChB,OAAO,EAAE,EAAE;IACX,SAAS,EAAE,QAAQ,CAAC,0BAA0B,CAAC;IAC/C,QAAQ,EAAE,CAAC;IACX,YAAY,EAAE;QACV,MAAM,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;KAC7B;IACD,UAAU,EAAE,UAAU,IAAI;QACtB,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YACX,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,wBAAwB,EAAE,gDAAgD,GAAG,EAAE,CAAC,MAAM,GAAG,SAAS,GAAG,EAAE,CAAC,MAAM,GAAG,aAAa,CAAC,CAAC;QACxJ,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACD,KAAK,EAAE,UAAU,EAAE,EAAE,EAAE;QACnB,EAAE,CAAC,WAAW,GAAG,OAAO,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAC5C,OAAO,CAAC,iBAAiB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAClC,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC,cAAc,GAAG,EAAE,CAAC,KAAK,GAAG,kCAAkC,CAAC;QAAC,CAAC;QAElH,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YACX,IAAI,IAAI,GAAG,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;YACxD,IAAI,CAAC;gBACD,KAAK,EAAE,KAAK;aACf,CAAC,CAAC,IAAI,CAAC,UAAU,MAAM;gBACpB,EAAE,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC;YAC7B,CAAC,CAAC,CAAC;QACP,CAAC;QAED,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAU,CAAC;YAC3B,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IACP,CAAC;IACD,QAAQ,EAAE,UAAU,EAAE,EAAE,EAAE;QACtB,OAAO,CAAC,cAAc,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACnC,CAAC;IACD,WAAW,EAAE,EAAE;IACf,KAAK,EAAE,EAAE;IACT,GAAG,EAAE,EAAE;IACP,MAAM,EAAE,EAAE;IACV,KAAK,EAAE,EAAE;IACT,MAAM,EAAE,IAAI;IACZ,MAAM,EAAE,MAAM;IACd,OAAO,EAAE,EAAE;CACd,CAAC,CAAC","file":"ms-control-select.js","sourcesContent":["var avalon = require('avalon');\nvar store = require('/services/storeService');\nvar avxUtil = require('/vendor/ane-component/ane-util');\n\n/**\n * 选择组件\n * @prop label 选择框前的label标签内容\n * @prop col 指定name属性值\n * @prop store 数据源，组件会自动寻找数据源中的dict方法，如果dict没定义则使用list方法\n * @prop col-key 数据中作为select的value属性值的字段，默认为id\n * @prop col-val 数据中作为select的展示值的字段，默认为name\n * \n * @example\n *  <ms:control-select label=\"图片尺寸\">\n *      <option value=\"1\">大图</option>\n *      <option value=\"2\">小图</option>\n *  </ms:control-select>\n * \n * \n *  <ms:control-select label=\"商品分类\" store=\"category\"></ms:control-select>\n */\navalon.component('ms:controlSelect', {\n    $slot: 'content',\n    content: '',\n    $template: __inline('./ms-control-select.html'),\n    $replace: 1,\n    $dynamicProp: {\n        duplex: { type: 'String' }\n    },\n    $$template: function (tmpl) {\n        var vm = this;\n        if (vm.store) {\n            tmpl = tmpl.replace(/\\{\\{content\\|html\\}\\}/g, '<option ms-repeat=\"options\" ms-attr-value=\"el.' + vm.colKey + '\">{{el.' + vm.colVal + '}}</option>');\n        }\n        return tmpl;\n    },\n    $init: function (vm, el) {\n        vm.$parentVmId = avxUtil.pickToRefs(vm, el);\n        avxUtil.enableDynamicProp(vm, el);\n        if (vm.store && !store[vm.store]) { avalon.error('配置了数据源，但数据源[' + vm.store + ']似乎未定义，/services/storeService.js') }\n        \n        if (vm.store) {\n            var dict = store[vm.store].dict || store[vm.store].list;\n            dict({\n                limit: 99999\n            }).then(function (result) {\n                vm.options = result.list;\n            });\n        }\n\n        vm.$watch('duplex', function (v) {\n            vm.$dynamicProp.duplex.setter(v);\n        });\n    },\n    $dispose: function (vm, el) {\n        avxUtil.removeFromRefs(vm, el);\n    },\n    $parentVmId: '',\n    label: '',\n    col: '',\n    duplex: '',\n    store: '',\n    colKey: 'id',\n    colVal: 'name',\n    options: []\n});"]}