{"version":3,"sources":["/vendor/ane-component/components/ms-select/ms-select.ts"],"names":[],"mappings":"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","file":"ms-select.js","sourcesContent":["import * as avalon from 'avalon2';\nimport controlComponent from \"../ms-form/ms-control\";\nimport '../ms-trigger';\nimport './ms-select.css';\n\nimport { getChildTemplateDescriptor, debounce } from '../../ane-util';\nimport { emitToFormItem } from '../ms-form/utils';\n\n/**\n * 选择组件\n * @prop value 组件值(inherit)\n * @prop col 字段路径(inherit)\n * @prop options 下拉选项\n * @prop mode 模式 'combobox' | 'multiple' | 'tags' 默认为 ''\n * @prop showSearch 是否显示搜索框\n * @prop remote 是否为远程搜索\n * @prop remoteMethod 当remote为true时调用，包含远程搜索要执行的请求，返回一个Promise<options>\n * \n * @example\n * ``` html\n * <ms-select :widget=\"{showSearch:true}\">\n *     <ms-select-option :widget=\"{value:'M'}\">男</ms-select-option>\n *     <ms-select-option :widget=\"{value:'F', disabled:false}\">女</ms-select-option>\n * </ms-select>\n * \n * <!--\n * fetchOptions(query) {\n *     return ajax({ url, data: { query } });\n * }\n * -->\n * <ms-select :widget=\"{mode:'combobox',showSearch:true,remote:true,remoteMethod:@fetchOptions}\"></ms-select>\n * ```\n */\ncontrolComponent.extend({\n    displayName: 'ms-select',\n    template: __inline('./ms-select.html'),\n    defaults: {\n        width: 0,\n        value: [],\n        mode: '',\n        options: [],\n        remote: false,\n        remoteMethod: avalon.noop,\n\n        // 下拉框展示和操作部分\n        displayValue: '',\n        showSearch: false,\n        searchValue: '',\n        withInBox(el) {\n            return this.$element === el || avalon.contains(this.$element, el);\n        },\n        getTarget() {\n            return this.$element;\n        },\n        handleClick(e) {\n            if (!this.panelVisible) {\n                this.searchValue = '';\n                this.width = this.$element.offsetWidth;\n                this.panelVisible = true;\n                this.$element.children[1].focus();\n            } else {\n                this.panelVisible = false;\n            }\n        },\n\n        // 下拉框下拉列表部分\n        panelVmId: '',\n        panelVisible: false,\n        panelClass: 'bus-select-dropdown',\n        panelTemplate: __inline('./ms-select-panel.html'),\n        handlePanelHide() {\n            this.panelVisible = false;\n        },\n        \n        onInit(event) {\n            var self = this;\n            const descriptor = getChildTemplateDescriptor(this);\n            this.options = getOptions(descriptor);\n            \n            emitToFormItem(this);\n            this.$watch('value', v => {\n                let value = v.$model || v || [''];\n                this.handleChange({\n                    target: { value: value[0] },\n                    denyValidate: true,\n                    type: 'select'\n                });\n            });\n\n            this.panelVmId = this.$id + '_panel';\n            const innerVm = avalon.define({\n                $id: this.panelVmId,\n                selected: '',\n                loading: false,\n                options: this.options.toJSON(),\n                searchValue: '',\n                getFilteredOptions() {\n                    return this.options.filter(this.filterFn);\n                },\n                filterFn(el) {\n                    if (self.remote && !this.loading) {\n                        return true;\n                    }\n                    const reg = new RegExp(avalon.escapeRegExp(this.searchValue), 'i');\n                    return reg.test(el.label) || reg.test(el.value);\n                },\n                handleOptionClick(e, option) {\n                    if (option.disabled) {\n                        return false;\n                    }\n                    this.selected = option.value;\n                    self.value.push(option.value);\n                    self.handleChange({\n                        target: { value: option.value },\n                        type: 'select'\n                    });\n                    self.displayValue = option.label;\n                    self.panelVisible = false;\n                }\n            });\n            this.$watch('searchValue', debounce(v => {\n                innerVm.searchValue = v;\n                if (this.remote && !!v) {\n                    innerVm.loading = true;\n                    this.remoteMethod(v).then(options => {\n                        innerVm.loading = false\n                        innerVm.options = options;\n                    });\n                }\n            }));\n        },\n        onDispose() {\n            delete avalon.vmodels[this.panelVmId];\n        }\n    }\n});\n\nfunction getOptions(descriptor) {\n    return descriptor.reduce((acc, option) => {\n        if (option.is != 'ms-select-option') return acc;\n        let label = option.inlineTemplate;\n        acc.push({\n            label: option.inlineTemplate || '',\n            value: option.props.value || '',\n            disabled: option.props.disabled || false\n        });\n        return acc;\n    }, []);\n}"]}