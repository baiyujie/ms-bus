{"version":3,"sources":["/vendor/ane-component/ane-util.ts"],"names":[],"mappings":";;;AAAA,gCAAkC;AAElC,6BAAoC,EAAE,EAAE,KAAK;IACzC,IAAI,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC;IACvC,OAAO,MAAM,EAAE,CAAC;QACZ,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,IAAI,MAAM,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;YACtD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;QACvB,CAAC;QACD,MAAM,GAAG,MAAM,CAAC,aAAa,CAAC;IAClC,CAAC;IACD,MAAM,CAAC,IAAI,CAAC;AAChB,CAAC;AATD,kDASC;AAED,2BAAkC,MAAM,EAAE,MAAc;IACpD,EAAE,CAAC,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;QACvB,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrE,CAAC;IACD,MAAM,CAAC,OAAO,CAAC,eAAK;QAChB,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,GAAG,CAAC,QAAQ,KAAK,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QACvE,IAAI,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC9C,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACX,OAAO,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC5B,OAAO,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAC9B,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QACpD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC9C,CAAC;IACL,CAAC,CAAC,CAAC;AACP,CAAC;AAfD,8CAeC;AAED,oCAA2C,MAAM,EAAE,MAAuB;IAAvB,kCAAS,MAAM,CAAC,OAAO;IACtE,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,MAAM;QACxC,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;YACZ,GAAG,CAAC,IAAI,CAAC;gBACL,EAAE,EAAE,MAAM,CAAC,EAAE;gBACb,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,cAAc,EAAE,MAAM,CAAC,QAAQ;gBAC/B,QAAQ,EAAE,0BAA0B,CAAC,MAAM,EAAE,MAAM,CAAC,WAAW,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC;aACzF,CAAC,CAAC;QACP,CAAC;QACD,MAAM,CAAC,GAAG,CAAC;IACf,CAAC,EAAE,EAAE,CAAC,CAAC;AACX,CAAC;AAZD,gEAYC","file":"ane-util.js","sourcesContent":["import * as avalon from 'avalon2';\n\nexport function findParentComponent(vm, ctype) {\n    let parent = vm.$element.parentElement;\n    while (parent) {\n        if (parent._vm_ && (!ctype || parent._ctype_ === ctype)) {\n            return parent._vm_;\n        }\n        parent = parent.parentElement;\n    }\n    return null;\n}\n\nexport function parseSlotToVModel(vmodel, vnodes?: any[]): void {\n    if (vnodes === undefined) {\n        vnodes = vmodel.$render.root ? vmodel.$render.root.children : [];\n    }\n    vnodes.forEach(vnode => {\n        if (!vnode || !vnode.nodeName || vnode.dom.nodeType !== 1) return true;\n        let slotName = vnode.dom.getAttribute('slot');\n        if (slotName) {\n            delete vnode.props[':skip'];\n            delete vnode.props['ms-skip'];\n            vmodel[slotName] = avalon.vdom(vnode, 'toHTML');\n        } else {\n            parseSlotToVModel(vmodel, vnode.children);\n        }\n    });\n}\n\nexport function getChildTemplateDescriptor(vmodel, render = vmodel.$render): any[] {\n    return render.directives.reduce((acc, action) => {\n        if (action.is) {\n            acc.push({\n                is: action.is,\n                props: action.value,\n                inlineTemplate: action.fragment,\n                children: getChildTemplateDescriptor(vmodel, action.innerRender || { directives: [] })\n            });\n        }\n        return acc;\n    }, []);\n}"]}