{
  "name": "avalonjs",
  "title": "avalon",
  "description": "A lightweight,high-performance and easy-to-learn javascript MVVM framework",
  "version": "1.5.8",
  "main": "avalon.js",
  "homepage": "http://avalonjs.github.io/",
  "author": {
    "name": "RubyLouvre",
    "url": "司徒正美"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/avalon/avalon.git"
  },
  "keywords": [
    "mvvm",
    "javascript",
    "browser",
    "library"
  ],
  "bugs": {
    "url": "https://github.com/avalon/avalon/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/jquery/jquery/blob/master/LICENSE.txt"
    }
  ],
  "dependencies": {},
  "devDependencies": {
    "gulp": "^3.8.11",
    "gulp-uglify": "1.1.0",
    "gulp-rename": "1.2.0",
    "gulp-jshint": "1.9.2",
    "gulp-replace": "0.5.2",
    "grunt-contrib-watch": "0.6.1",
    "gulp-concat": "2.4.3"
  },
  "scripts": {
    "build": "npm install && gulp"
  },
  "commitplease": {
    "components": []
  },
  "readme": "Avalon 1.5\n=======================\navalon 1.4的升级版，添加了大量特性\n\n添加avalon.directive方法，方便自定义指令\n添加avalon.component方法，方便自定义组件\n添加avalon.effect与ms-effect，实现对动画的支持\n实现对子属性及数组元素的深层监控\n去除对旧风格的支持，直接导致无法支持oinui,启用新的UI库,avalon.bootstrap\n默认开启异步刷新视图，当然也可以使用avalon.config({async: false})，保证与1.4的行为一致\n计算属性被集中到$computed对象中定义\n其具体使用详见avalon官网\n\n以下为更新日志\n\n\n#avalon1.5.6\n1. 添加扫描后的回调\n   在目标DIV加上ms-controller=\"test\", $id为test的VM监听一个\"ms-scan-end\"回调\n```\nvm.$watch(\"ms-scan-end\", function(div){\n   //div为绑定的元素\n})\n```\n\n#avalon1.5.5\n1. 终于比较完美地解决光标问题\n2. fix data-duplex-changed执行两次的BUG\n3. 启动全新的UI库 [avalon.bootstrap](https://github.com/RubyLouvre/avalon.bootstrap) 欢迎大家踊跃参与\n4. fix IE下onchange与oninput无法共存的BUG\n5. 以 component组件进行增强,现在支持对on-xxx属性在vmodels查找回调的功能\n\n\n#avalon1.5.4(新touch模块)\n\n1. 修正oldAccessors BUG https://github.com/RubyLouvre/avalon/issues/1091\n2. 修正当一个元素存在多个ms-if绑定时,由于注释节点不能提供pos,导致显示不正确 https://github.com/RubyLouvre/avalon/issues/1088\n3. 新的触屏模块\n4. 重构duplex指令 (包括添加msFocus属性,对validation指令的支持,data-duplex-changed回调的修复)\n5. loader模块分离得更干净\n6. 修正include指令在不与动画指令配合使用时,data-include-replace辅助指令失效的BUG\n7. fix avalon.modern下的ms-duplex-checked BUG\n8. fix ready模块对loader模块的innerRequire的依赖\n\n\n#avalon1.5.3(各种奇葩BUG修复及更快的parser)\n\n1. 全新的parser\n2. 修正$watch的监控\n3. fix 使用数组clear方法清空数组后，再push元素报错\n4. fix ms-duplex在modern版本的错误\n5. fix uuid引发的错误 https://github.com/RubyLouvre/avalon/issues/1060\n6. 将所有编译函数的地方抽象成一个方法cspCompile https://github.com/RubyLouvre/avalon2/commit/4169422645466d0f036aa7ad48e1b9dd6c874106\n7. fix toJson在IE6的BUG https://github.com/RubyLouvre/avalon/issues/1063\n8. fix avalon(window).width()在IE6下 取值不正确的BUG\n\n\n\n#avalon1.5.2(主要在自定义标签上进行简化)\n\n1. configs 改名为 config\n2. $extends  改名为 $extend\n3. fix loader不能正确处理url path map之后带query的BUG\n4. fix ms-if 与 HTML5 form validation共用时的BUG\n5. fix $watch回调this指向BUG\n6. fix ms-if 碰到子对象的属性不存在时不插入节点的 BUG\n7. fix ms-include不存在动画时不会移除旧节点的BUG\n\n#avalon1.5.1\n1. 精简自定义标签的设计\n2. fix cache内存泄漏\n3. 添加$fire(\"all!xxx\")的支持\n4. fix ms-duplex使用拦截器时触发多次的BUG\n5. 公开openTag, closeTag到avalon.config\n\n\n# avalon1.5.0\n\n1. 添加动画指令 ms-effect avalon.effect http://avalonjs.github.io/#zh/bindings/effect.html\n2. 添加基于自定义标签的组件指令 http://avalonjs.github.io/#zh/bindings/component.html\n3. 全新的$watch机制   http://avalonjs.github.io/#zh/concepts/$watch.html\n4. 计算属性全部移动$computed对象上集中定义\n5. 更优雅便捷地自定义组件  http://avalonjs.github.io/#zh/bindings/directive.html\n6. 废掉avalon.define的旧风格定义,只支持新风格\n7. 废掉data-duplex-observe辅助指令\n8. 废掉ms-widget 详看component/pager/avalon.pager.js 是怎么将原来组件改成新组件的\n\n现在的VM只有第一层上拥有$events, $fire, $watch, $model属性与方法, 它的子对象没有这些属性\n\n\n",
  "readmeFilename": "README.md",
  "_id": "avalonjs@1.5.8",
  "_shasum": "f00e7a4a7c07b6cf11dd16786d93508418f42a39",
  "_resolved": "https://github.com/RubyLouvre/avalon/archive/1.5.8.tar.gz",
  "_from": "https://github.com/RubyLouvre/avalon/archive/1.5.8.tar.gz"
}
